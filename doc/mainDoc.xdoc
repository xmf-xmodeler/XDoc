<?xml version="1.0" encoding="UTF-8"?>
<XModelerDocumentation>
  <Node id="2" name="Root" type="default" checkAgainst = "" linkedNodes = "">
    <Node id="3" name="General" type="default" checkAgainst = "" linkedNodes = "">
      <Node id="26" name="Images" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="27" name="Saving" type="default" checkAgainst = "" linkedNodes = ""/>
        <Node id="28" name="Loading" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="29" name="Load Image 1" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "XModeler not yet started." actions = "Open XModeler. When asked, load image from [LINK HERE]." postconditions = "I: Check console for suspicious messages.&#10;II: Check if Class [X] exists in diagram [Y]" lastResult = "Fail:&#10;No image specified yet" priority = "0.0" lastTestedOn = "1466515028963" lastTestedBy = "testuser " hasProblem = "YES"/>
        </Node>
        <Node id="30" name="Load Then Save" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="31" name="Load/Save/Compare" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "XModeler not yet started." actions = "Open XModeler. When asked, load image from [LINK HERE].&#10;Save Image to different name. Compare xml files" postconditions = "The files differ by dates/usernames but otherwise identical." lastResult = "Fail:&#10;No image specified yet" priority = "0.0" lastTestedOn = "1466515109471" lastTestedBy = "testuser " hasProblem = "YES"/>
        </Node>
      </Node>
      <Node id="99" name="Diagrams" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="67" name="Classes" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="5" name="Create Class" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "Choose a valid name (like &#34;Dog&#34;).&#10;Check there is no class on the diagram with that name" actions = "Add a class via the Toolbar with the chosen name (left of diagram)" postconditions = "A class node and a class box appear with the chosen name" lastResult = "Success" priority = "1.0" lastTestedOn = "1475587651050" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="6" name="Create Class with name clash" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "Choose a valid name (like &#34;Dog&#34;) Create a class with that name unless it already exists" actions = "Add a second class via the Toolbar with the chosen name (left of diagram)" postconditions = "An error message must appear. No new class on the diagram or the tree. " lastResult = "Fail:&#10;It was actually possible" priority = "1.0" lastTestedOn = "1475587688040" lastTestedBy = "testuser
" hasProblem = "YES"/>
          <Node id="7" name="Create Class with invalid name" type="test" checkAgainst = "" linkedNodes = "14" freeText = "" preConditions = "Choose an invalid valid name (like &#34;007&#34;)" actions = "Add a class via the Toolbar with the chosen name (left of diagram)" postconditions = "An error message must appear. No new class on the diagram or the tree. " lastResult = "Fail:&#10;Possible" priority = "0.2" lastTestedOn = "1475587747077" lastTestedBy = "testuser
" hasProblem = "YES"/>
          <Node id="8" name="Rename Class" type="test" checkAgainst = "" linkedNodes = "14" freeText = "" preConditions = "Choose some valid names (like &#34;Dog&#34;, &#34;Cat&#34;, &#34;Mouse&#34; ...) Create a class with a one of these names" actions = "I. Rename the class via double click on the diagram &#10;II. Rename the class via double click on the tree &#10;(III. Rename the class via console)" postconditions = "The new name is accepted after each attempt." lastResult = "Success" priority = "1.0" lastTestedOn = "1475588244572" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="9" name="Rename Class with name clash" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "Choose a valid name (like &#34;Dog&#34;) Create a class with that name unless it already exists.&#10;Create another class with another name." actions = "I. Rename the second class via double click on the diagram.&#10;II. Rename the second class via double click on the tree.&#10;(III. Rename the second class via console)" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "Not tested. As &#34;Create... &#34; above failed this has to be checked anyway once that one works" priority = "1.0" lastTestedOn = "1475588057834" lastTestedBy = "testuser
" hasProblem = "YES"/>
          <Node id="10" name="Rename Class with invalid name" type="test" checkAgainst = "" linkedNodes = "14" freeText = "" preConditions = "Choose an invalid valid name (like &#34;007&#34;) &#10;Create a class with a legal name." actions = "I. Rename the class via double click on the diagram &#10;II. Rename the class via double click on the tree &#10;(III. Rename the class via console)" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "Fail:&#10;Possible via command line" priority = "0.2" lastTestedOn = "1475587803939" lastTestedBy = "testuser
" hasProblem = "YES"/>
          <Node id="11" name="Delete Class" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "There is a class in the diagram and in the tree. &#10;(If not, create one) &#10;(They are supposed to be in sync at all times?)" actions = "Delete Class in Tree via Popoup/Delete OR (test both separately)&#10;-------------&#10;Extra: If test OK then&#10;Create new class with same name to see if something strange happens." postconditions = "Class Box is gone &#10;Class Node in Tree is gone" lastResult = "Success" priority = "1.0" lastTestedOn = "1475587956573" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="48" name="Delete many Classes" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "There is a class in the diagram and in the tree. &#10;(If not, create one) &#10;(They are supposed to be in sync at all times?)" actions = "Delete many Classes in Tree via Popoup/Delete OR (test both separately)&#10;" postconditions = "The garbage collector makes no trouble. All classes gone" lastResult = "Fail:&#10;The garbage collector gets stuck" priority = "1.0" lastTestedOn = "1475588018664" lastTestedBy = "testuser
" hasProblem = "YES"/>
          <Node id="95" name="Class Levels" type="default" checkAgainst = "" linkedNodes = "">
            <Node id="42" name="Class Level Req." type="requirement" checkAgainst = "" linkedNodes = "" text = "Every Multilevel Class/Object has a Level.&#10;&#10;The level is a non-negative integer.&#10;&#10;An instance has a level one less than its class."/>
            <Node id="94" name="Check decreasing levels" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "" actions = "Create a Multilevel class in the diagram with level 5 or greater.&#10;Instantiate until level 0." postconditions = "All classes/objects have different colors. They have their of() written above their name." lastResult = "Fail:&#10;Level names &#62;5 don't appear as M6, M7... in the Tool bar" priority = "0.0" lastTestedOn = "1475588187664" lastTestedBy = "testuser
" hasProblem = "YES"/>
            <Node id="50" name="Try to create a negative level" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "" actions = "Create class and enter 0, -1 ,-2 ... as level.&#10;Instantiate then." postconditions = "Not possible for level &#60; 0.&#10;Instantiation not possible for any of these." lastResult = "Fail:&#10;You can instantiate a level 0 created this way.&#10;You can create and instantiate level -2 or less.&#10;Level -1 becomes level 3" priority = "0.0" lastTestedOn = "1466509178310" lastTestedBy = "testuser " hasProblem = "YES"/>
          </Node>
        </Node>
        <Node id="55" name="Attributes" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="13" name="Create Attribute" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "There is a class on the diagram" actions = "Create an Attribute" postconditions = "A new attribute with a valid and unique name appears." lastResult = "Success" priority = "1.0" lastTestedOn = "1475588296460" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="15" name="Rename Attribute" type="test" checkAgainst = "" linkedNodes = "14" freeText = "" preConditions = "Choose some valid names (like &#34;age&#34;, &#34;height&#34;, &#34;numberOfFeet&#34;, &#34;llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch&#34; ...)&#10;Create an Attribute" actions = "I. Rename the Attribute via double click on the diagram &#10;II. Rename the Attribute via double click on the tree (remove the : Type))&#10;III. Rename the Attribute via console: Project0::MetaClass0.getAttribute(&#34;oldName&#34;).setName(&#34;newName&#34;);" postconditions = "The new name is accepted after each attempt." lastResult = "Success" priority = "1.0" lastTestedOn = "1475588685435" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="16" name="Rename Attribute with name clash" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "Choose some valid names (like &#34;age&#34;, &#34;height&#34;, &#34;numberOfFeet&#34; ...).&#10;Create two Attributes.&#10;Rename an Attribute to one of these names (if that name isn't yet used)&#10;Rename a second Attribute to one of these names" actions = "I. Rename the second Attribute via double click on the diagram.&#10;II. Rename the second Attribute via double click on the tree.&#10;III. Rename the Attribute via console: Project0::MetaClass0.getAttribute(&#34;oldName&#34;).setName(&#34;newName&#34;);" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "Success" priority = "1.0" lastTestedOn = "1475588696686" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="17" name="Rename Attribute with invalid name" type="test" checkAgainst = "" linkedNodes = "14" freeText = "" preConditions = "Choose an invalid valid name (like &#34;007&#34;) &#10;Rename an Attribute to one of these names" actions = "I. Rename the Attribute via double click on the diagram &#10;II. Rename the Attribute via double click on the tree &#10;III. Rename the Attribute via console: Project0::MetaClass0.getAttribute(&#34;oldName&#34;).setName(&#34;newName&#34;);" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "Success" priority = "0.2" lastTestedOn = "1475588710742" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="18" name="Delete Attribute" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "There is a Attribute in the diagram and in the tree. &#10;(If not, create one) &#10;(They are supposed to be in sync at all times?)" actions = "Delete Attribute in Tree via Popup/Delete OR (test both separately)&#10;-------------&#10;Extra: If test OK then&#10;Create new Attribute with same name to see if something strange happens." postconditions = "Attribute Box is gone &#10;Attribute Node in Tree is gone" lastResult = "Fail:&#10;The console exploded with a loud &#34;BANG&#34;&#10;New console ordered. Waiting for delivery." priority = "1.0" lastTestedOn = "1466001762630" lastTestedBy = "N/A" hasProblem = "YES"/>
          <Node id="37" name="Intrinsic Attributes" type="default" checkAgainst = "" linkedNodes = "">
            <Node id="4" name="Change Attribute Level" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "" actions = "" postconditions = "" lastResult = "" priority = "1.0" lastTestedOn = "0" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="62" name="Make Attribute intrinsic I" type="test" checkAgainst = "" linkedNodes = "409" freeText = "" preConditions = "An attribute in a class on a diagram with no number to the left." actions = "Type a negativ number into the white box.&#10;&#10;Check Project0::MetaClass0.getAttribute(&#34;att0&#34;).isIntrinsic and .instLevel" postconditions = "input not accepted, both checks keep previous values" lastResult = "Fail&#10;accepts" priority = "1.0" lastTestedOn = "1466604615284" lastTestedBy = "testuser " hasProblem = "YES"/>
            <Node id="111" name="Make Attribute intrinsic II" type="test" checkAgainst = "" linkedNodes = "409" freeText = "" preConditions = "An attribute in a class on a diagram with no number to the left." actions = "Type a number larger than/equal to zero but smaller than class level into the white box.&#10;&#10;Check Project0::MetaClass0.getAttribute(&#34;att0&#34;).isIntrinsic and .instLevel" postconditions = "input accepted, isIntrinsic = true, instLevel = the entered number" lastResult = "Success" priority = "1.0" lastTestedOn = "1475589317037" lastTestedBy = "testuser
" hasProblem = "NO"/>
            <Node id="143" name="Make Attribute intrinsic III" type="test" checkAgainst = "" linkedNodes = "409" freeText = "" preConditions = "An attribute in a class on a diagram with no number to the left." actions = "Type a number larger than/equal class level into the white box.&#10;&#10;Check Project0::MetaClass0.getAttribute(&#34;att0&#34;).isIntrinsic and .instLevel" postconditions = "input not accepted, both checks keep previous values" lastResult = "Fail&#10;accepts" priority = "1.0" lastTestedOn = "1466604615284" lastTestedBy = "testuser " hasProblem = "YES"/>
            <Node id="72" name="Make Attribute intrinsic IV" type="test" checkAgainst = "" linkedNodes = "409" freeText = "" preConditions = "An attribute in a class on a diagram with no number to the left." actions = "Type an non integer (preferably float, try also String) into the white box.&#10;&#10;Check Project0::MetaClass0.getAttribute(&#34;att0&#34;).isIntrinsic and .instLevel" postconditions = "input not accepted, both checks keep previous values" lastResult = "Fail&#10;accepts" priority = "1.0" lastTestedOn = "1466604615284" lastTestedBy = "testuser " hasProblem = "YES"/>
            <Node id="81" name="Make Attribute intrinsic V" type="test" checkAgainst = "" linkedNodes = "409" freeText = "" preConditions = "An attribute in a class on a diagram with no number to the left." actions = "Type empty or space into the white box.&#10;&#10;Check Project0::MetaClass0.getAttribute(&#34;att0&#34;).isIntrinsic and .instLevel" postconditions = "input accepted, isIntrinsic = false" lastResult = "Success" priority = "1.0" lastTestedOn = "1475589204942" lastTestedBy = "testuser
" hasProblem = "NO"/>
          </Node>
          <Node id="36" name="Slot Creation" type="default" checkAgainst = "" linkedNodes = "">
            <Node id="44" name="Create instance and check for slot creation" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "An existing Class with at least one Attribute" actions = "Create an Instance" postconditions = "There should be the Slot(s) for all Attributes&#10;* in the diagram&#10;* in the tree&#10;* (on demand) at the command line" lastResult = "" priority = "1.0" lastTestedOn = "0" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="52" name="Create instance and check for slot creation (intrinsic)" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "An existing Class with at least one intrinsic Attribute (at least skipping one level)" actions = "Create an Instance for the level required to get that Slot" postconditions = "There should be the Slot(s) for all Attributes&#10;* in the diagram&#10;* in the tree&#10;* (on demand) at the command line&#10;&#10;Equally none of them should be present on higher levels" lastResult = "" priority = "1.0" lastTestedOn = "0" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="58" name="Create Attribute, check Slot" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "An existing Class and an Instance of that Class" actions = "Create an Attribute in a valid way" postconditions = "The Slot &#10;* in the diagram&#10;* in the tree&#10;* (on demand) at the command line&#10;should have appeared/be accessable" lastResult = "" priority = "1.0" lastTestedOn = "0" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="132" name="Rename Attribute, check Slot" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "An existing Class with an Attribute, and an Instance of that Class with the Slot" actions = "Rename the Attribute in a valid way" postconditions = "The Slot name &#10;* in the diagram&#10;* in the tree&#10;* (on demand) at the command line&#10;should have changed" lastResult = "" priority = "1.0" lastTestedOn = "0" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="77" name="Delete Attribute, check Slot" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "An existing Class with an Attribute, and an Instance of that Class with the Slot" actions = "Delete the Attribute" postconditions = "The Slot name &#10;* in the diagram&#10;* in the tree&#10;* (on demand) at the command line&#10;should have disappeared/be inaccessable" lastResult = "" priority = "1.0" lastTestedOn = "0" lastTestedBy = "N/A" hasProblem = "NO"/>
          </Node>
        </Node>
        <Node id="116" name="Operation Values" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="33" name="Keywords" type="specification" checkAgainst = "" linkedNodes = "" text = "@Operation foo[monitor=true, monitorMin=1,monitorMax=4]()&#10; 1.random(10)&#10;end&#10;&#10;monitor=true triggers value to be shown&#10;&#10;monitorMin=x shows numbers less than x in different colour&#10;&#10;monitorMax=y shows numbers greater than y in different colour"/>
          <Node id="105" name="OperationValues General" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "A class on a diagram with level &#62;= 1" actions = "Add oparation and edit it to:&#10;@Operation anyFreeName[monitor=true]()&#10; &#34;OK&#34;&#10;end&#10;Then create an instance and make it show Operation Values" postconditions = "The Instance shows &#34;anyFreeName = OK&#34; with &#34;OK&#34; in a black box" lastResult = "Success" priority = "1.0" lastTestedOn = "1475591210881" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="406" name="OperationValues Integer" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "A class on a diagram with level &#62;= 1" actions = "Add oparation and edit it to:&#10;@Operation anyFreeName[monitor=true, monitorMin=3,monitorMax=5]()&#10; 1.random(10)&#10;end&#10;Then create an instance and make it show Operation Values&#10;Press update until 2,3,4,5,6 have appeared " postconditions = "The Instance shows &#34;anyFreeName = ?&#34; with &#34;?&#34; being &#10;a number between 1 and 10 in a black box, where 3,4,5 are yellow, the others red." lastResult = "Success" priority = "0.5" lastTestedOn = "1475591284980" lastTestedBy = "testuser
" hasProblem = "NO"/>
        </Node>
        <Node id="43" name="Operations" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="19" name="Create Operation" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "Choose a valid name (like &#34;Dog&#34;).&#10;Check there is no Operation on the diagram with that name" actions = "Add a Operation via the Popup Menu" postconditions = "A Operation node and a Operation box appear with the chosen name" lastResult = "Success" priority = "1.1" lastTestedOn = "1475589346940" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="22" name="Rename Operation" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "Choose some valid names (like &#34;Dog&#34;, &#34;Cat&#34;, &#34;Mouse&#34; ...) &#10;Create a Operation with a one of these names" actions = "I. Rename the Operation via double click on the diagram &#10;II. Rename the Operation via double click on the tree &#10;(III. Rename the Operation via console)&#10;IV. try with and without ()" postconditions = "The new name is accepted after each attempt." lastResult = "Success" priority = "1.0" lastTestedOn = "1475589455559" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="23" name="Rename Operation with name clash" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "Choose a valid name (like &#34;Dog&#34;) &#10;Create a Operation with that name unless it already exists.&#10;Create another Operation with another name." actions = "I. Rename the second Operation via double click on the diagram.&#10;II. Rename the second Operation via double click on the tree.&#10;(III. Rename the second Operation via console)" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "Fail:&#10;Was possible" priority = "1.0" lastTestedOn = "1475589472207" lastTestedBy = "testuser
" hasProblem = "YES"/>
          <Node id="24" name="Rename Operation with invalid name" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "Choose an invalid valid name (like &#34;007&#34;) &#10;Create a Operation with a legal name." actions = "I. Rename the Operation via double click on the diagram &#10;II. Rename the Operation via double click on the tree &#10;(III. Rename the Operation via console)" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "Success" priority = "0.2" lastTestedOn = "1475589538868" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="25" name="Delete Operation" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "There is a Operation in the diagram and in the tree. &#10;(If not, create one) &#10;(They are supposed to be in sync at all times?)" actions = "Delete Operation in Tree via Popup/Delete OR (test both separately)&#10;-------------&#10;Extra: If test OK then&#10;Create new Operation with same name to see if something strange happens." postconditions = "Operation Box is gone &#10;Operation Node in Tree is gone" lastResult = "Success" priority = "1.0" lastTestedOn = "1475589552052" lastTestedBy = "testuser
" hasProblem = "NO"/>
          <Node id="134" name="Intrinsic Operations" type="default" checkAgainst = "" linkedNodes = "">
            <Node id="51" name="Intrinsic Operations InstLevelTextfield" type="requirement" checkAgainst = "" linkedNodes = "" text = "The Black instLevel should disappear on the level before the level. (That is where it is like a normal operation.)"/>
          </Node>
        </Node>
        <Node id="34" name="Alignment of Text" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="98" name="Test at 100% dpi" type="default" checkAgainst = "" linkedNodes = "">
            <Node id="97" name="Large Class Name" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "Create Class Node" actions = "Rename Class with a significantly longer name, &#10;so that it would not fit at current Alignment&#10;* in Diagram&#10;* via Command Line Tool or Tree" postconditions = "The Box gets bigger" lastResult = "Success" priority = "1.0" lastTestedOn = "1475585923345" lastTestedBy = "testuser
" hasProblem = "NO"/>
            <Node id="20" name="Change names" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "A Class node with at least two operations and at least two attributes" actions = "Change names of operations and attributes, forcing the box to adapt to size" postconditions = "Names always fit" lastResult = "Success" priority = "1.0" lastTestedOn = "1475591200033" lastTestedBy = "testuser
" hasProblem = "NO"/>
          </Node>
          <Node id="80" name="Test at >100% dpi" type="default" checkAgainst = "" linkedNodes = ""/>
          <Node id="112" name="Class Name" type="specification" checkAgainst = "" linkedNodes = "" text = "The Class name should be centered and fit into the Class Box."/>
          <Node id="216" name="Class Box Size" type="specification" checkAgainst = "" linkedNodes = "" text = "The class box does not shrink when the class name gets smaller&#10;The class box does shrink when something else gets smaller&#10;The class box gets bigger if something does not fit.&#10;"/>
          <Node id="109" name="All fits in Box " type="requirement" checkAgainst = "" linkedNodes = "" text = "Nothing should cross the box's border. &#10;The box should get bigger if something does not fit.&#10;The box should get smaller if there is space left.&#10;There will be no scroll bar."/>
        </Node>
      </Node>
      <Node id="106" name="Associations" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="38" name="Requirement 1" type="requirement" checkAgainst = "" linkedNodes = "" text = "The values of association ends should be accessible by suitable &#10;getter / setter methods (for single-valued associations) &#10;or get / add / remove / removeAll methods (for multi-valued associations). &#10;This should be the case when the opposite association end is set to &#34;navigable&#34; (which is the default).&#10;For bi-directional associations, the underlying implementations should make sure that the semantics of a bi-directional association is kept intact, &#10;i.e., that whenever an object b is added to a, there will also be a back-reference from b to a. "/>
        <Node id="47" name="empty test" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "" actions = "Create Tests" postconditions = "" lastResult = "Success" priority = "0.0" lastTestedOn = "1475586564858" lastTestedBy = "testuser
" hasProblem = "NO"/>
      </Node>
      <Node id="64" name="Attributes" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="41" name="Requirement 1" type="requirement" checkAgainst = "" linkedNodes = "409" text = "Currently, attributes created via the GUI can only be of primitive types or type string. &#10;The GUI should be extended by a type selection mechanism for classes as well. &#10;(Using a class as attribute type via code is, of course, possible.)&#10;&#10;#######&#10;&#10;Q: Is this meant to be so? Can attributes be more than a primitive type&#10;&#10;&#10;&#10;"/>
        <Node id="39" name="new Test" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "" actions = "Create Tests" postconditions = "" lastResult = "Success" priority = "0.0" lastTestedOn = "1475586560211" lastTestedBy = "testuser
" hasProblem = "NO"/>
      </Node>
      <Node id="409" name="Associations vs. Attributes" type="requirement" checkAgainst = "" linkedNodes = "41;62;81;72;143;111" text = "Attributes are not able to link to foreign objects. &#10;They are always primitive types and never references."/>
      <Node id="223" name="Maths" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="175" name="Integer" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="35" name="a.mod(b) on negative numbers" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "" actions = "Type (-1).mod(6); into console and press enter" postconditions = "" lastResult = "Fail:&#10;While -1.mod(6) results in -1 and looks correct, as -1 and -1 are in the same class, &#10;the minus is evaluated last, so we only found out that 1.mod(6) is correct.&#10;(-1).mod(6) is returning 1, but should return something like -1 or 5." priority = "0.0" lastTestedOn = "1466515741305" lastTestedBy = "testuser " hasProblem = "YES"/>
        </Node>
      </Node>
      <Node id="14" name="Valid Names" type="specification" checkAgainst = "" linkedNodes = "17;15;10;8;7" text = "Valid names start with a letter. Then letter/number/underscore. Not too many letters."/>
    </Node>
    <Node id="54" name="Recently Found Bugs" type="default" checkAgainst = "" linkedNodes = "">
      <Node id="46" name="Diagram opened twice" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "" actions = "Create class diagram in project view&#10;Open diagram once more" postconditions = "Console should not show:&#10;Cannot find element with id ... &#34; on diagram, which has been opened twice." lastResult = "Fail" priority = "0.0" lastTestedOn = "1466507998159" lastTestedBy = "testuser " hasProblem = "YES"/>
    </Node>
    <Node id="107" name="XTools" type="default" checkAgainst = "" linkedNodes = "">
      <Node id="60" name="General Idea" type="requirement" checkAgainst = "" linkedNodes = "" text = "In XTools you can load a Group of Classes and &#10;assign them a graphical representation.&#10;&#10;If you want to model a car, you need a Class Car, which becomes the Root. That Car does not need to apper an the diagram. &#10;Next you create classes which the car comprises: Chassis, Wheel, Frame, Door,  ... , Fluffy Dice&#10;Connect them with Attribute/Association relations as needed.&#10;&#10;You can now define Nodes and Edges in XTools. A Node represents a Class, &#10;an Edge represents a Relation.&#10;&#10;"/>
      <Node id="32" name="Root Element" type="requirement" checkAgainst = "" linkedNodes = "" text = "A Diagram in XTools needs a Root Element which represents what is modeled"/>
      <Node id="82" name="known Bugs" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="88" name="Ellipse has opaque white background" type="test" checkAgainst = "12" linkedNodes = "" freeText = "" preConditions = "XTools Diagram, node with button created" actions = "set node appearance to ellipse, then add two of these nodes to diagram" postconditions = "move one ellipse around until they overlap. there should be no white rectangle" lastResult = "Fail" priority = "1.0" lastTestedOn = "1470150451195" lastTestedBy = "testuser " hasProblem = "YES"/>
        <Node id="12" name="can't find how to reopen the ToolType editor " type="requirement" checkAgainst = "" linkedNodes = "" text = "It should be possible to reopen the ToolType editor"/>
        <Node id="45" name="createDiagrams menu has entry without label " type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "not always reproduceable" actions = "" postconditions = "There shouldn't be such a thing as an empt ylabel" lastResult = "Fail" priority = "1.0" lastTestedOn = "1470150602162" lastTestedBy = "testuser " hasProblem = "YES"/>
        <Node id="158" name="set background color to main ToolType has no effect " type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "" actions = "" postconditions = "" lastResult = "Fail" priority = "1.0" lastTestedOn = "1470150625497" lastTestedBy = "testuser " hasProblem = "YES"/>
        <Node id="68" name="Triangle shapes are invisble" type="test" checkAgainst = "" linkedNodes = "" freeText = "" preConditions = "Crate node with traiange shape" actions = "use node" postconditions = "see triangle" lastResult = "Fail" priority = "1.0" lastTestedOn = "1470150662303" lastTestedBy = "testuser " hasProblem = "YES"/>
      </Node>
    </Node>
  </Node>
</XModelerDocumentation>