<?xml version="1.0" encoding="UTF-8"?>
<XModelerDocumentation>
  <Node id="2" name="Root" type="default" checkAgainst = "" linkedNodes = "">
    <Node id="3" name="General" type="default" checkAgainst = "" linkedNodes = "">
      <Node id="26" name="Images" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="27" name="Saving" type="default" checkAgainst = "" linkedNodes = ""/>
        <Node id="28" name="Loading" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="29" name="Load Image 1" type="test" checkAgainst = "" linkedNodes = "" preConditions = "XModeler not yet started." actions = "Open XModeler. When asked, load image from [LINK HERE]." postconditions = "I: Check console for suspicious messages.&#10;II: Check if Class [X] exists in diagram [Y]" lastResult = "Fail:&#10;No image specified yet" priority = "0.0" lastTestedOn = "1466515028963" lastTestedBy = "testuser
" hasProblem = "YES"/>
        </Node>
        <Node id="30" name="Load Then Save" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="31" name="Load/Save/Compare" type="test" checkAgainst = "" linkedNodes = "" preConditions = "XModeler not yet started." actions = "Open XModeler. When asked, load image from [LINK HERE].&#10;Save Image to different name. Compare xml files" postconditions = "The files differ by dates/usernames but otherwise identical." lastResult = "Fail:&#10;No image specified yet" priority = "0.0" lastTestedOn = "1466515109471" lastTestedBy = "testuser
" hasProblem = "YES"/>
        </Node>
      </Node>
      <Node id="99" name="Diagrams" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="4" name="Check Diagram - Tree - Model" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="67" name="Classes" type="default" checkAgainst = "" linkedNodes = "">
            <Node id="5" name="Create Class" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose a valid name (like &#34;Dog&#34;).&#10;Check there is no class on the diagram with that name" actions = "Add a class via the Toolbar with the chosen name (left of diagram)" postconditions = "A class node and a class box appear with the chosen name" lastResult = "Success" priority = "1.0" lastTestedOn = "1466001206210" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="6" name="Create Class with name clash" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose a valid name (like &#34;Dog&#34;) Create a class with that name unless it already exists" actions = "Add a second class via the Toolbar with the chosen name (left of diagram)" postconditions = "An error message must appear. No new class on the diagram or the tree. " lastResult = "Success" priority = "1.0" lastTestedOn = "1466440369663" lastTestedBy = "testuser " hasProblem = "NO"/>
            <Node id="7" name="Create Class with invalid name" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose an invalid valid name (like &#34;007&#34;)" actions = "Add a class via the Toolbar with the chosen name (left of diagram)" postconditions = "An error message must appear. No new class on the diagram or the tree. " lastResult = "Success" priority = "1.0" lastTestedOn = "1466087611972" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="8" name="Rename Class" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose some valid names (like &#34;Dog&#34;, &#34;Cat&#34;, &#34;Mouse&#34; ...) Create a class with a one of these names" actions = "I. Rename the class via double click on the diagram &#10;II. Rename the class via double click on the tree &#10;(III. Rename the class via console)" postconditions = "The new name is accepted after each attempt." lastResult = "Success" priority = "1.0" lastTestedOn = "1466440374125" lastTestedBy = "testuser " hasProblem = "NO"/>
            <Node id="9" name="Rename Class with name clash" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose a valid name (like &#34;Dog&#34;) Create a class with that name unless it already exists.&#10;Create another class with another name." actions = "I. Rename the second class via double click on the diagram.&#10;II. Rename the second class via double click on the tree.&#10;(III. Rename the second class via console)" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "Success" priority = "1.0" lastTestedOn = "1466440376277" lastTestedBy = "testuser " hasProblem = "NO"/>
            <Node id="10" name="Rename Class with invalid name" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose an invalid valid name (like &#34;007&#34;) &#10;Create a class with a legal name." actions = "I. Rename the class via double click on the diagram &#10;II. Rename the class via double click on the tree &#10;(III. Rename the class via console)" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "Success" priority = "1.0" lastTestedOn = "1466087609807" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="11" name="Delete Class" type="test" checkAgainst = "" linkedNodes = "" preConditions = "There is a class in the diagram and in the tree. &#10;(If not, create one) &#10;(They are supposed to be in sync at all times?)" actions = "Delete Class in Tree via Popoup/Delete OR (test both separately)&#10;-------------&#10;Extra: If test OK then&#10;Create new class with same name to see if something strange happens." postconditions = "Class Box is gone Class Node in Tree is gone" lastResult = "Success" priority = "1.0" lastTestedOn = "1466180013949" lastTestedBy = "N/A" hasProblem = "NO"/>
          </Node>
          <Node id="55" name="Attributes" type="default" checkAgainst = "" linkedNodes = "">
            <Node id="12" name="Create Attribute" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose a valid name (like &#34;age&#34;).&#10;Check there is no Attribute on the Class with that name" actions = "Add an Attribute to the class with the chosen name. Use Popup menu" postconditions = "A Attribute node and a Attribute box appear with the chosen name" lastResult = "Success" priority = "1.0" lastTestedOn = "1466001206210" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="13" name="Create Attribute with name clash" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose a valid name (like &#34;age&#34;) .&#10;Create an Attribute with that name unless it already exists" actions = "Add a second Attribute to the class with the chosen name. Use Popup menu" postconditions = "An error message must appear. No new attribute on the class or the tree. " lastResult = "Success" priority = "1.0" lastTestedOn = "1466007077386" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="14" name="Create Attribute with invalid name" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose an invalid valid name (like &#34;007&#34;)" actions = "Add an Attribute to the class with the chosen name. Use Popup menu" postconditions = "An error message must appear. No new attribute on the class or the tree. " lastResult = "Fail" priority = "1.0" lastTestedOn = "1466081027568" lastTestedBy = "N/A" hasProblem = "YES"/>
            <Node id="15" name="Rename Attribute" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose some valid names (like &#34;age&#34;, &#34;height&#34;, &#34;numberOfFeet&#34; ...)&#10;Create an Attribute with a one of these names" actions = "I. Rename the Attribute via double click on the diagram &#10;II. Rename the Attribute via double click on the tree &#10;(III. Rename the Attribute via console)" postconditions = "The new name is accepted after each attempt." lastResult = "Success" priority = "1.0" lastTestedOn = "1466081024955" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="16" name="Rename Attribute with name clash" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose some valid names (like &#34;age&#34;, &#34;height&#34;, &#34;numberOfFeet&#34; ...).&#10;Create an Attribute with that name unless it already exists.&#10;Create another Attribute with another name." actions = "I. Rename the second Attribute via double click on the diagram.&#10;II. Rename the second Attribute via double click on the tree.&#10;(III. Rename the second Attribute via console)" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "Success" priority = "1.0" lastTestedOn = "1466007156597" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="17" name="Rename Attribute with invalid name" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose an invalid valid name (like &#34;007&#34;) &#10;Create an Attribute with a legal name." actions = "I. Rename the Attribute via double click on the diagram &#10;II. Rename the Attribute via double click on the tree &#10;(III. Rename the Attribute via console)" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "Success" priority = "1.5" lastTestedOn = "1466007169429" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="18" name="Delete Attribute" type="test" checkAgainst = "" linkedNodes = "" preConditions = "There is a Attribute in the diagram and in the tree. &#10;(If not, create one) &#10;(They are supposed to be in sync at all times?)" actions = "Delete Attribute in Tree via Popup/Delete OR (test both separately)&#10;-------------&#10;Extra: If test OK then&#10;Create new Attribute with same name to see if something strange happens." postconditions = "Attribute Box is gone Attribute Node in Tree is gone" lastResult = "Fail:&#10;The console exploded with a loud &#34;BANG&#34;&#10;New console ordered. Waiting for delivery." priority = "1.0" lastTestedOn = "1466001762630" lastTestedBy = "N/A" hasProblem = "YES"/>
          </Node>
          <Node id="43" name="Operations" type="default" checkAgainst = "" linkedNodes = "">
            <Node id="19" name="Create Operation" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose a valid name (like &#34;Dog&#34;).&#10;Check there is no Operation on the diagram with that name" actions = "Add a Operation via the Toolbar with the chosen name (left of diagram)" postconditions = "A Operation node and a Operation box appear with the chosen name" lastResult = "Success" priority = "1.1" lastTestedOn = "1466001206210" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="20" name="Create Operation with name clash" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose a valid name (like &#34;Dog&#34;) Create a Operation with that name unless it already exists" actions = "Add a second Operation via the Toolbar with the chosen name (left of diagram)" postconditions = "An error message must appear. No new Operation on the diagram or the tree. " lastResult = "" priority = "1.0" lastTestedOn = "0" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="21" name="Create Operation with invalid name" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose an invalid valid name (like &#34;007&#34;)" actions = "Add a Operation via the Toolbar with the chosen name (left of diagram)" postconditions = "An error message must appear. No new Operation on the diagram or the tree. " lastResult = "" priority = "1.0" lastTestedOn = "0" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="22" name="Rename Operation" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose some valid names (like &#34;Dog&#34;, &#34;Cat&#34;, &#34;Mouse&#34; ...) Create a Operation with a one of these names" actions = "I. Rename the Operation via double click on the diagram &#10;II. Rename the Operation via double click on the tree &#10;(III. Rename the Operation via console)" postconditions = "The new name is accepted after each attempt." lastResult = "" priority = "1.0" lastTestedOn = "0" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="23" name="Rename Operation with name clash" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose a valid name (like &#34;Dog&#34;) Create a Operation with that name unless it already exists.&#10;Create another Operation with another name." actions = "I. Rename the second Operation via double click on the diagram.&#10;II. Rename the second Operation via double click on the tree.&#10;(III. Rename the second Operation via console)" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "" priority = "1.0" lastTestedOn = "0" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="24" name="Rename Operation with invalid name" type="test" checkAgainst = "" linkedNodes = "" preConditions = "Choose an invalid valid name (like &#34;007&#34;) &#10;Create a Operation with a legal name." actions = "I. Rename the Operation via double click on the diagram &#10;II. Rename the Operation via double click on the tree &#10;(III. Rename the Operation via console)" postconditions = "An error message must appear after each attempt. The new name is never accepted" lastResult = "" priority = "1.0" lastTestedOn = "0" lastTestedBy = "N/A" hasProblem = "NO"/>
            <Node id="25" name="Delete Operation" type="test" checkAgainst = "" linkedNodes = "" preConditions = "There is a Operation in the diagram and in the tree. &#10;(If not, create one) &#10;(They are supposed to be in sync at all times?)" actions = "Delete Operation in Tree via Popup/Delete OR (test both separately)&#10;-------------&#10;Extra: If test OK then&#10;Create new Operation with same name to see if something strange happens." postconditions = "Operation Box is gone Operation Node in Tree is gone" lastResult = "Fail:&#10;The console exploded with a loud &#34;BANG&#34;&#10;New console ordered. Waiting for delivery." priority = "1.0" lastTestedOn = "1466001762630" lastTestedBy = "N/A" hasProblem = "YES"/>
          </Node>
        </Node>
      </Node>
      <Node id="106" name="Associations" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="38" name="Requirement 1" type="requirement" checkAgainst = "" linkedNodes = "" text = "The values of association ends should be accessible by suitable &#10;getter / setter methods (for single-valued associations) &#10;or get / add / remove / removeAll methods (for multi-valued associations). &#10;This should be the case when the opposite association end is set to &#34;navigable&#34; (which is the default).&#10;For bi-directional associations, the underlying implementations should make sure that the semantics of a bi-directional association is kept intact, &#10;i.e., that whenever an object b is added to a, there will also be a back-reference from b to a. "/>
        <Node id="47" name="empty test" type="test" checkAgainst = "" linkedNodes = "" preConditions = "" actions = "Create Tests" postconditions = "" lastResult = "Fail:&#10;This is an empty test to trigger the warning sign." priority = "0.0" lastTestedOn = "1466514621857" lastTestedBy = "testuser
" hasProblem = "YES"/>
      </Node>
      <Node id="64" name="Attributes" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="41" name="Requirement 1" type="requirement" checkAgainst = "" linkedNodes = "409" text = "Currently, attributes created via the GUI can only be of primitive types or type string. &#10;The GUI should be extended by a type selection mechanism for classes as well. &#10;(Using a class as attribute type via code is, of course, possible.)&#10;&#10;#######&#10;&#10;Q: Is this meant to be so? Can attributes be more than a primitive type&#10;&#10;&#10;&#10;"/>
        <Node id="39" name="new Test" type="test" checkAgainst = "" linkedNodes = "" preConditions = "" actions = "Create Tests" postconditions = "" lastResult = "Fail:&#10;This is an empty test to trigger the warning sign." priority = "0.0" lastTestedOn = "1466515597305" lastTestedBy = "testuser
" hasProblem = "YES"/>
      </Node>
      <Node id="409" name="Associations vs. Attributes" type="requirement" checkAgainst = "" linkedNodes = "41" text = "Attributes are not able to link to foreign objects. &#10;They are always primitive types and never references."/>
      <Node id="223" name="Maths" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="175" name="Integer" type="default" checkAgainst = "" linkedNodes = "">
          <Node id="35" name="a.mod(b) on negative numbers" type="test" checkAgainst = "" linkedNodes = "" preConditions = "" actions = "Type (-1).mod(6); into console and press enter" postconditions = "" lastResult = "Fail:&#10;While -1.mod(6) results in -1 and looks correct, as -1 and -1 are in the same class, &#10;the minus is evaluated last, so we only found out that 1.mod(6) is correct.&#10;(-1).mod(6) is returning 1, but should return something like -1 or 5." priority = "0.0" lastTestedOn = "1466515741305" lastTestedBy = "testuser
" hasProblem = "YES"/>
        </Node>
      </Node>
    </Node>
    <Node id="32" name="Multilevel" type="default" checkAgainst = "" linkedNodes = "">
      <Node id="95" name="Class Levels" type="default" checkAgainst = "" linkedNodes = "">
        <Node id="42" name="Class Level Req." type="requirement" checkAgainst = "" linkedNodes = "" text = "Every Multilevel Class/Object has a Level.&#10;&#10;The level is a non-negative integer.&#10;&#10;An instance has a level one less than its class."/>
        <Node id="94" name="Check decreasing levels" type="test" checkAgainst = "" linkedNodes = "" preConditions = "" actions = "Create a Multilevel class in the diagram with level 5 or greater.&#10;Instantiate until level 0." postconditions = "All classes/objects have different colors. They have their of() written above their name." lastResult = "Success" priority = "0.0" lastTestedOn = "1466509411369" lastTestedBy = "testuser " hasProblem = "NO"/>
        <Node id="50" name="Try to create a negative level" type="test" checkAgainst = "" linkedNodes = "" preConditions = "" actions = "Create class and enter 0, -1 ,-2 ... as level.&#10;Instantiate then." postconditions = "Not possible for level &#60; 0.&#10;Instantiation not possible for any of these." lastResult = "Fail:&#10;You can instantiate a level 0 created this way.&#10;You can create and instatntiate level -2 or less.&#10;Level -1 becomes level 3" priority = "0.0" lastTestedOn = "1466509178310" lastTestedBy = "testuser " hasProblem = "YES"/>
      </Node>
    </Node>
    <Node id="54" name="Recently Found Bugs" type="default" checkAgainst = "" linkedNodes = "">
      <Node id="46" name="Diagram opened twice" type="test" checkAgainst = "" linkedNodes = "" preConditions = "" actions = "Create class diagram in project view&#10;Open diagram once more" postconditions = "Console should not show:&#10;Cannot find element with id ... &#34; on diagram, which has been opened twice." lastResult = "Fail" priority = "0.0" lastTestedOn = "1466507998159" lastTestedBy = "testuser " hasProblem = "YES"/>
    </Node>
  </Node>
</XModelerDocumentation>